class Comments:
    singleLine = []
    multiLine = {} # start : end

    def __init__(self, singleLine, multiLine):
        self.singleLine = singleLine
        self.multiLine = multiLine

extensionlookup = {'c' : 'C',
                   'cpp' : 'C++',
                   'cc' : 'C++',
                   'h' : 'C / C++ header or similar',
                   'py' : 'Python',
                   'java' : 'Java',
                   'rs' : 'Rust',
                   'sh' : 'Shell',
                   'js' : 'JavaScript',
                   'html' : 'HTML',
                   'css' : 'CSS',
                   'php' : 'PHP',
                   'go' : 'Go',
                   'rb' : 'Ruby',
                   'pl' : 'Perl',
                   'swift' : 'Swift',
                   'kt' : 'Kotlin',
                   'cs' : 'C#',
                   'm' : 'Objective-C',
                   'scala' : 'Scala',
                   'ts' : 'TypeScript',
                   'vb' : 'Visual Basic',
                   'lua' : 'Lua',
                   'r' : 'R',
                   'dart' : 'Dart',
                   'sql' : 'SQL',
                   'asm' : 'Assembly',
                   'json' : 'JSON',
                   'xml' : 'XML',
                   'yml' : 'YAML',
                   'toml' : 'TOML',
                   'ini' : 'INI',
                   'md' : 'Markdown',
                   'Dockerfile' : 'Dockerfile',
                   }
commentlookup = {
                'other' : Comments([],{}),
                'C' : Comments(['//'], {'/*' : '*/'}),
                'C++' : Comments(['//'], {'/*' : '*/'}),
                'C / C++ header or similar' : Comments(['//'], {'/*' : '*/'}),
                'Python' : Comments(['#'], {}),
                'Java' : Comments(['//'], {'/*' : '*/'}),
                'Rust' : Comments(['//'], {'/*' : '*/'}),
                'Shell' : Comments(['#'], {}),
                'JavaScript' : Comments(['//'], {'/*' : '*/'}),
                'HTML' : Comments([], {'<!--' : '-->'}),
                'CSS' : Comments([], {'/*' : '*/'}),
                'PHP' : Comments(['//'], {'/*' : '*/'}),
                'Go' : Comments(['//'], {'/*' : '*/'}),
                'Ruby' : Comments(['#'], {'=begin' : '=end'}),
                'Perl' : Comments(['#'], {}),
                'Swift' : Comments(['//'], {'/*' : '*/'}),
                'Kotlin' : Comments(['//'], {'/*' : '*/'}),
                'C#' : Comments(['//'], {'/*' : '*/'}),
                'Objective-C' : Comments(['//'], {'/*' : '*/'}),
                'Scala' : Comments(['//'], {'/*' : '*/'}),
                'TypeScript' : Comments(['//'], {'/*' : '*/'}),
                'Visual Basic' : Comments(['\''], {}),
                'Lua' : Comments(['--'], {}),
                'R' : Comments(['#'], {}),
                'Dart' : Comments(['//'], {'/*' : '*/'}),
                'SQL' : Comments(['--'], {}),
                'Assembly' : Comments([';'], {}),
                'JSON' : Comments([], {}),
                'XML' : Comments([], {'<!--' : '-->'}),
                'YAML' : Comments(['#'], {}),
                'TOML' : Comments(['#'], {}),
                'INI' : Comments([';'], {}),
                'Markdown' : Comments(['#'], {}),
                'Dockerfile' : Comments(['#'], {}),
                }

